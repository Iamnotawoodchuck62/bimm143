# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
mean(student3)
mean(student2)
mean(student1)
which.min(student1)
which.min(student1)
min(student1)
student1[!8]
student1[-which.min(student1)]
mean(student1[which.min(student1)])
mean(student1[-which.min(student1)])
is.na(student2)
student2[-is.na(student2)]
student2[is.na(student2)]
student2[!is.na(student2)]
student1[!which.min(student1)]
min(student2)
min(student3)
student3[-which.min(student3)][!is.na(student3)]
(student3[-which.min(student3)])[!is.na(student3)]
student3[[-which.min(student3)]][!is.na(student3)]
mean(student2[-which.min(student2)])
student2[-which.min(student2)]
student2[is.na(student2)] <- 0
student2
student2[is.na(student2)] <- 0
student3[is.na(student3)] <- 0
mean(student3[-which.min(student3)])
mean(student2,x=0)
mean(student2,trim=0)
mean(student3,trim=0)
noNaTemp <- student3
noNaTemp[is.na(noNaTemp)] <- 0
mean(student3[-which.min(noNaTemp)])
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
noNaTemp <- student2
noNaTemp[is.na(noNaTemp)] <- 0
grade <- function(x) {
x[is.na(x)] <- 0
mean(x[-which.min(x)])
}
grade(student3)
gradebook <- read.csv("https://tinyurl.com/gradeinput",row.names=1)
gradebook
apply(gradebook,1,grade)
which.max(apply(gradebook,1,grade))
apply(gradebook,1,grade)
apply(gradebook,2,mean)
y <- gradebook
y[is.na(y)] <- 0
apply(y,2,mean)
grades <- apply(gradebook,1,grade)
grades
grades <- apply(gradebook,1,grade)
apply(gradebook,2,cor,grades)
grades <- apply(gradebook,1,grade)
y <- gradebook
y[is.na(y)] <- 0
apply(y,2,mean)
apply(y,2,cor,grades)
grades <- apply(gradebook,1,grade)
y <- gradebook
y[is.na(y)] <- 0
apply(y,2,cor,grades)
M <- c(4,5,NA)
mean(M,na.rm=T)
na.omit(M)
mean(na.omit(M))
mean(is.na(M))
mean(na.omit[M])
numbcol(y)
numbrow()
dim(y)
?mean
help(mean)
help(mean())
mean?
install.packages()
install.packages(bio3d)
install.packages("bio3d")
library(bio3d)
library(bio3d)
s1 <- read.pdb("4AKE")
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
PChainAPlot <- function(x) {
y <- read.pdb(x)
z <- trim.pdb(y,chain="A",elety="CA")
w <- z$atom$b
plotb3(w,sse=z,typ="1",ylab="Bfactor")
}
PChainAPlot("4AKE")
library(bio3d)
s1 <- read.pdb("4AKE")
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
library(bio3d)
s1 <- read.pdb("4AKE")
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
PChainAPlot <- function(x) {
y <- read.pdb(x)
z <- trim.pdb(y,chain="A",elety="CA")
w <- z$atom$b
plotb3(w,sse=z,type="1",ylab="Bfactor")
}
PChainAPlot("4AKE")
PChainAPlot <- function(x) {
y <- read.pdb(x)
z <- trim.pdb(y,chain="A",elety="CA")
w <- z$atom$b
plotb3(w,sse=z,type=1,ylab="Bfactor")
}
PChainAPlot("4AKE")
PChainAPlot("1AKE")
y <- read.pdb("1AKE")
z <- trim.pdb(y,chain="A",elety="CA")
w <- z$atom$b
plotb3(w,sse=z,typ="1",ylab="Bfactor")
PChainAPlot <- function(x) {
y <- read.pdb(x)
z <- trim.pdb(y,chain="A",elety="CA")
w <- z$atom$b
plotb3(w,sse=z,typ="l",ylab="Bfactor")
}
PChainAPlot("1AKE")
library(bio3d)
s1 <- read.pdb("4AKE")
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
BfacPlot("1AKE")
BfacPlot <- function(x) {
y <- read.pdb(x)
z <- trim.pdb(y,chain="A",elety="CA")
w <- z$atom$b
plotb3(w,sse=z,typ="l",ylab="Bfactor")
}
BfacPlot("1AKE")
BfacPlot("HBSB")
BfacPlot("1E4Y")
BfacPlot <- function(x) {
y <- read.pdb(x)
z <- trim.pdb(y,chain="A",elety="CA")
w <- z$atom$b
plotb3(w,sse=z,typ="l",ylab="Bfactor")
}
BfacPlot("1E4Y")
library(bio3d)
s1 <- read.pdb("4AKE")
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
BfacPlot("1E4Y")
